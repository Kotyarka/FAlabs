#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü—É—Ç–∏
PROGRAM="../program"
TESTS_FILE="all_tests.txt"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –∏–∑ —Å–µ–∫—Ü–∏–∏
run_test_section() {
    local section_name="$1"
    local test_count=0
    local passed_count=0
    
    echo -e "${BLUE}=== $section_name ===${NC}"
    
    # –ò—â–µ–º –Ω–∞—á–∞–ª–æ —Å–µ–∫—Ü–∏–∏ –∏ —á–∏—Ç–∞–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–π —Å–µ–∫—Ü–∏–∏ –∏–ª–∏ –∫–æ–Ω—Ü–∞ —Ñ–∞–π–ª–∞
    while IFS='|' read -r command expected_exit expected_output; do
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        if [[ -z "$command" || "$command" == \#* ]]; then
            continue
        fi
        
        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é - –≤—ã—Ö–æ–¥–∏–º
        if [[ "$command" == \[*\] ]]; then
            break
        fi
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        command=$(echo "$command" | sed 's/^ *//;s/ *$//')
        expected_exit=$(echo "$expected_exit" | sed 's/^ *//;s/ *$//')
        expected_output=$(echo "$expected_output" | sed 's/^ *//;s/ *$//')
        
        test_count=$((test_count + 1))
        
        echo "–¢–µ—Å—Ç $test_count: $command"
        echo "–û–∂–∏–¥–∞–µ—Ç—Å—è: –∫–æ–¥ $expected_exit, –≤—ã–≤–æ–¥: '$expected_output'"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        output=$($PROGRAM $command 2>&1)
        actual_exit=$?
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞
        exit_match=0
        if [ $actual_exit -eq $expected_exit ]; then
            exit_match=1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
        output_match=1
        if [ -n "$expected_output" ] && [ "$expected_output" != "-" ]; then
            if echo "$output" | grep -q "$expected_output"; then
                output_match=1
            else
                output_match=0
            fi
        fi
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if [ $exit_match -eq 1 ] && [ $output_match -eq 1 ]; then
            echo -e "${GREEN}‚úì –£–°–ü–ï–•${NC}"
            passed_count=$((passed_count + 1))
        else
            echo -e "${RED}‚úó –û–®–ò–ë–ö–ê${NC}"
            echo "–ü–æ–ª—É—á–µ–Ω –∫–æ–¥: $actual_exit"
            echo "–ü–æ–ª—É—á–µ–Ω –≤—ã–≤–æ–¥: $output"
        fi
        echo "---"
        
    done
    
    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–µ–∫—Ü–∏–∏
    if [ $test_count -gt 0 ]; then
        echo -e "${YELLOW}–†–µ–∑—É–ª—å—Ç–∞—Ç $section_name: $passed_count/$test_count –ø—Ä–æ–π–¥–µ–Ω–æ${NC}"
        echo
    fi
    
    return $passed_count
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–∞
if [ ! -f "$PROGRAM" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–∞${NC}"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ 'make' —Å–Ω–∞—á–∞–ª–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Ç–µ—Å—Ç–æ–≤
if [ ! -f "$TESTS_FILE" ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞: —Ñ–∞–π–ª —Ç–µ—Å—Ç–æ–≤ $TESTS_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

echo -e "${GREEN}=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ì–†–ê–ú–ú–´ ===${NC}"
echo

total_tests=0
total_passed=0

# –ò—Å–ø–æ–ª—å–∑—É–µ–º exec –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–º –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–º
exec 3< "$TESTS_FILE"

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –ø–æ —Å–µ–∫—Ü–∏—è–º
while IFS= read -r line <&3; do
    # –ò—â–µ–º –Ω–∞—á–∞–ª–æ —Å–µ–∫—Ü–∏–∏
    if [[ "$line" == \[*\] ]]; then
        section_name=$(echo "$line" | sed 's/\[//;s/\]//')
        run_test_section "$section_name"
        section_passed=$?
        total_passed=$((total_passed + section_passed))
    fi
done

exec 3<&-

echo -e "${GREEN}=== –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ ===${NC}"
echo -e "${YELLOW}–í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–æ: $total_passed —Ç–µ—Å—Ç–æ–≤${NC}"

if [ $total_passed -eq $total_tests ]; then
    echo -e "${GREEN}üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!${NC}"
else
    echo -e "${RED}‚ö† –ù–ï –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´${NC}"
fi
